{
	"info": {
		"_postman_id": "weather-api-collection-001",
		"name": "Weather Integration API",
		"description": "A comprehensive collection for testing the Weather Integration API with rate limiting and caching capabilities.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "weather-api-exporter"
	},
	"item": [
		{
			"name": "Health & Status",
			"item": [
				{
					"name": "Root Endpoint",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								""
							]
						},
						"description": "Get basic service information and status"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"service\": \"Weather Integration API\",\n  \"status\": \"healthy\",\n  \"timestamp\": \"2025-09-21T11:56:59.520340Z\",\n  \"version\": \"1.0.0\"\n}"
						}
					]
				},
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/health",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"health"
							]
						},
						"description": "Get detailed health status of the service"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/health",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"health"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"UP\",\n  \"timestamp\": \"2025-09-21T11:57:28.853517Z\"\n}"
						}
					]
				},
				{
					"name": "API Information",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/info",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"info"
							]
						},
						"description": "Get API information and available endpoints"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/info",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"info"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"Weather Integration API\",\n  \"description\": \"Integration layer for weather data with rate limiting and caching\",\n  \"version\": \"1.0.0\",\n  \"endpoints\": [\n    {\n      \"method\": \"GET\",\n      \"path\": \"/weather/summary\",\n      \"description\": \"Get weather summary for favorite locations above temperature threshold\",\n      \"parameters\": [\n        \"unit (celsius|fahrenheit) - Temperature unit\",\n        \"temperature (number) - Minimum temperature threshold\",\n        \"locations (string) - Comma-separated location IDs in lat,lon format\"\n      ]\n    },\n    {\n      \"method\": \"GET\",\n      \"path\": \"/weather/locations/{locationId}\",\n      \"description\": \"Get 5-day weather forecast for a specific location\",\n      \"parameters\": [\n        \"locationId (path) - Location ID in lat,lon format\"\n      ]\n    }\n  ]\n}"
						}
					]
				}
			],
			"description": "Health check and status endpoints"
		},
		{
			"name": "Weather Summary",
			"item": [
				{
					"name": "Get Weather Summary - Celsius",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/weather/summary?unit=celsius&temperature=24&locations=51.5074,-0.1278,48.8566,2.3522",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"weather",
								"summary"
							],
							"query": [
								{
									"key": "unit",
									"value": "celsius",
									"description": "Temperature unit"
								},
								{
									"key": "temperature",
									"value": "24",
									"description": "Minimum temperature threshold"
								},
								{
									"key": "locations",
									"value": "51.5074,-0.1278,48.8566,2.3522",
									"description": "Comma-separated location IDs in lat,lon format (London, Paris)"
								}
							]
						},
						"description": "Get weather summary for favorite locations where tomorrow's temperature will be above 24°C"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/weather/summary?unit=celsius&temperature=24&locations=51.5074,-0.1278,48.8566,2.3522",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"weather",
										"summary"
									],
									"query": [
										{
											"key": "unit",
											"value": "celsius"
										},
										{
											"key": "temperature",
											"value": "24"
										},
										{
											"key": "locations",
											"value": "51.5074,-0.1278,48.8566,2.3522"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"locations\": [\n    {\n      \"location\": {\n        \"id\": \"51.5074,-0.1278\",\n        \"name\": \"London\",\n        \"lat\": 51.5074,\n        \"lon\": -0.1278,\n        \"country\": \"GB\"\n      },\n      \"tomorrowMaxTemperature\": 26.5,\n      \"temperatureUnit\": \"celsius\",\n      \"weatherDescription\": \"partly cloudy\",\n      \"meetsTemperatureThreshold\": true\n    }\n  ],\n  \"metadata\": {\n    \"timestamp\": \"2025-09-21T11:57:04.600404Z\",\n    \"requestId\": \"req-12345\",\n    \"rateLimitRemaining\": 9995,\n    \"cacheHit\": false\n  }\n}"
						}
					]
				},
				{
					"name": "Get Weather Summary - Fahrenheit",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/weather/summary?unit=fahrenheit&temperature=75&locations=40.7128,-74.0060,34.0522,-118.2437",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"weather",
								"summary"
							],
							"query": [
								{
									"key": "unit",
									"value": "fahrenheit",
									"description": "Temperature unit"
								},
								{
									"key": "temperature",
									"value": "75",
									"description": "Minimum temperature threshold"
								},
								{
									"key": "locations",
									"value": "40.7128,-74.0060,34.0522,-118.2437",
									"description": "Comma-separated location IDs in lat,lon format (New York, Los Angeles)"
								}
							]
						},
						"description": "Get weather summary for favorite locations where tomorrow's temperature will be above 75°F"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/weather/summary?unit=fahrenheit&temperature=75&locations=40.7128,-74.0060,34.0522,-118.2437",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"weather",
										"summary"
									],
									"query": [
										{
											"key": "unit",
											"value": "fahrenheit"
										},
										{
											"key": "temperature",
											"value": "75"
										},
										{
											"key": "locations",
											"value": "40.7128,-74.0060,34.0522,-118.2437"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"locations\": [\n    {\n      \"location\": {\n        \"id\": \"34.0522,-118.2437\",\n        \"name\": \"Los Angeles\",\n        \"lat\": 34.0522,\n        \"lon\": -118.2437,\n        \"country\": \"US\"\n      },\n      \"tomorrowMaxTemperature\": 78.5,\n      \"temperatureUnit\": \"fahrenheit\",\n      \"weatherDescription\": \"clear sky\",\n      \"meetsTemperatureThreshold\": true\n    }\n  ],\n  \"metadata\": {\n    \"timestamp\": \"2025-09-21T11:57:04.600404Z\",\n    \"requestId\": \"req-12346\",\n    \"rateLimitRemaining\": 9994,\n    \"cacheHit\": false\n  }\n}"
						}
					]
				},
				{
					"name": "Get Weather Summary - Invalid Parameters",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/weather/summary?unit=invalid&temperature=abc&locations=",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"weather",
								"summary"
							],
							"query": [
								{
									"key": "unit",
									"value": "invalid",
									"description": "Invalid temperature unit"
								},
								{
									"key": "temperature",
									"value": "abc",
									"description": "Invalid temperature value"
								},
								{
									"key": "locations",
									"value": "",
									"description": "Empty locations"
								}
							]
						},
						"description": "Test validation with invalid parameters"
					},
					"response": [
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/weather/summary?unit=invalid&temperature=abc&locations=",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"weather",
										"summary"
									],
									"query": [
										{
											"key": "unit",
											"value": "invalid"
										},
										{
											"key": "temperature",
											"value": "abc"
										},
										{
											"key": "locations",
											"value": ""
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"code\": \"INVALID_ARGUMENT\",\n    \"message\": \"Invalid parameters: unit must be 'celsius' or 'fahrenheit', temperature must be a valid number, locations cannot be empty\"\n  },\n  \"metadata\": {\n    \"timestamp\": \"2025-09-21T11:57:04.600404Z\",\n    \"requestId\": \"req-12347\",\n    \"source\": \"weather-integration-api\"\n  }\n}"
						}
					]
				}
			],
			"description": "Weather summary endpoints for getting locations above temperature threshold"
		},
		{
			"name": "Location Weather",
			"item": [
				{
					"name": "Get 5-Day Forecast - London",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/weather/locations/51.5074,-0.1278",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"weather",
								"locations",
								"51.5074,-0.1278"
							]
						},
						"description": "Get 5-day weather forecast for London"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/weather/locations/51.5074,-0.1278",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"weather",
										"locations",
										"51.5074,-0.1278"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"location\": {\n    \"id\": \"51.5074,-0.1278\",\n    \"name\": \"London\",\n    \"lat\": 51.5074,\n    \"lon\": -0.1278,\n    \"country\": \"GB\"\n  },\n  \"forecasts\": [\n    {\n      \"date\": \"2025-09-21\",\n      \"temperatureMin\": {\n        \"celsius\": 12.5,\n        \"fahrenheit\": 54.5,\n        \"kelvin\": 285.65\n      },\n      \"temperatureMax\": {\n        \"celsius\": 18.2,\n        \"fahrenheit\": 64.76,\n        \"kelvin\": 291.35\n      },\n      \"description\": \"partly cloudy\",\n      \"humidity\": 65.0,\n      \"windSpeed\": 3.2\n    },\n    {\n      \"date\": \"2025-09-22\",\n      \"temperatureMin\": {\n        \"celsius\": 14.1,\n        \"fahrenheit\": 57.38,\n        \"kelvin\": 287.25\n      },\n      \"temperatureMax\": {\n        \"celsius\": 20.5,\n        \"fahrenheit\": 68.9,\n        \"kelvin\": 293.65\n      },\n      \"description\": \"clear sky\",\n      \"humidity\": 58.0,\n      \"windSpeed\": 2.8\n    }\n  ],\n  \"metadata\": {\n    \"timestamp\": \"2025-09-21T11:57:04.600404Z\",\n    \"requestId\": \"req-12348\",\n    \"rateLimitRemaining\": 9993,\n    \"cacheHit\": false\n  }\n}"
						}
					]
				},
				{
					"name": "Get 5-Day Forecast - New York",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/weather/locations/40.7128,-74.0060",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"weather",
								"locations",
								"40.7128,-74.0060"
							]
						},
						"description": "Get 5-day weather forecast for New York"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/weather/locations/40.7128,-74.0060",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"weather",
										"locations",
										"40.7128,-74.0060"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"location\": {\n    \"id\": \"40.7128,-74.0060\",\n    \"name\": \"New York\",\n    \"lat\": 40.7128,\n    \"lon\": -74.0060,\n    \"country\": \"US\"\n  },\n  \"forecasts\": [\n    {\n      \"date\": \"2025-09-21\",\n      \"temperatureMin\": {\n        \"celsius\": 15.3,\n        \"fahrenheit\": 59.54,\n        \"kelvin\": 288.45\n      },\n      \"temperatureMax\": {\n        \"celsius\": 22.1,\n        \"fahrenheit\": 71.78,\n        \"kelvin\": 295.25\n      },\n      \"description\": \"few clouds\",\n      \"humidity\": 72.0,\n      \"windSpeed\": 4.1\n    }\n  ],\n  \"metadata\": {\n    \"timestamp\": \"2025-09-21T11:57:04.600404Z\",\n    \"requestId\": \"req-12349\",\n    \"rateLimitRemaining\": 9992,\n    \"cacheHit\": false\n  }\n}"
						}
					]
				},
				{
					"name": "Get 5-Day Forecast - Invalid Location",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/weather/locations/invalid-location",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"weather",
								"locations",
								"invalid-location"
							]
						},
						"description": "Test with invalid location format"
					},
					"response": [
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/weather/locations/invalid-location",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"weather",
										"locations",
										"invalid-location"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"code\": \"INVALID_ARGUMENT\",\n    \"message\": \"Invalid location format. Expected format: latitude,longitude\"\n  },\n  \"metadata\": {\n    \"timestamp\": \"2025-09-21T11:57:04.600404Z\",\n    \"requestId\": \"req-12350\",\n    \"source\": \"weather-integration-api\"\n  }\n}"
						}
					]
				},
				{
					"name": "Get 5-Day Forecast - Location Not Found",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/weather/locations/999.999,999.999",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"weather",
								"locations",
								"999.999,999.999"
							]
						},
						"description": "Test with non-existent location coordinates"
					},
					"response": [
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/weather/locations/999.999,999.999",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"weather",
										"locations",
										"999.999,999.999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"code\": \"NOT_FOUND\",\n    \"message\": \"Location not found: 999.999,999.999\"\n  },\n  \"metadata\": {\n    \"timestamp\": \"2025-09-21T11:57:04.600404Z\",\n    \"requestId\": \"req-12351\",\n    \"source\": \"weather-integration-api\"\n  }\n}"
						}
					]
				}
			],
			"description": "Location-specific weather forecast endpoints"
		},
		{
			"name": "Rate Limiting Tests",
			"item": [
				{
					"name": "Rate Limit Test - Multiple Requests",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/weather/summary?unit=celsius&temperature=20&locations=51.5074,-0.1278",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"weather",
								"summary"
							],
							"query": [
								{
									"key": "unit",
									"value": "celsius"
								},
								{
									"key": "temperature",
									"value": "20"
								},
								{
									"key": "locations",
									"value": "51.5074,-0.1278"
								}
							]
						},
						"description": "Test rate limiting by making multiple requests (run this multiple times)"
					},
					"response": [
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/weather/summary?unit=celsius&temperature=20&locations=51.5074,-0.1278",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"weather",
										"summary"
									],
									"query": [
										{
											"key": "unit",
											"value": "celsius"
										},
										{
											"key": "temperature",
											"value": "20"
										},
										{
											"key": "locations",
											"value": "51.5074,-0.1278"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Retry-After",
									"value": "86400"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"code\": \"RATE_LIMIT_EXCEEDED\",\n    \"message\": \"Rate limit exceeded. Maximum 10000 requests per day allowed.\"\n  },\n  \"metadata\": {\n    \"timestamp\": \"2025-09-21T11:57:04.600404Z\",\n    \"requestId\": \"req-12352\",\n    \"source\": \"weather-integration-api\"\n  }\n}"
						}
					]
				}
			],
			"description": "Tests for rate limiting functionality"
		},
		{
			"name": "Error Handling",
			"item": [
				{
					"name": "Internal Server Error",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/weather/summary?unit=celsius&temperature=20&locations=error-test",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"weather",
								"summary"
							],
							"query": [
								{
									"key": "unit",
									"value": "celsius"
								},
								{
									"key": "temperature",
									"value": "20"
								},
								{
									"key": "locations",
									"value": "error-test"
								}
							]
						},
						"description": "Test error handling with invalid location format"
					},
					"response": [
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/weather/summary?unit=celsius&temperature=20&locations=error-test",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"weather",
										"summary"
									],
									"query": [
										{
											"key": "unit",
											"value": "celsius"
										},
										{
											"key": "temperature",
											"value": "20"
										},
										{
											"key": "locations",
											"value": "error-test"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"code\": \"INTERNAL_ERROR\",\n    \"message\": \"An unexpected error occurred\"\n  },\n  \"metadata\": {\n    \"timestamp\": \"2025-09-21T11:57:04.600404Z\",\n    \"requestId\": \"req-12353\",\n    \"source\": \"weather-integration-api\"\n  }\n}"
						}
					]
				}
			],
			"description": "Error handling and edge case testing"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Set timestamp for request tracking",
					"pm.globals.set('timestamp', new Date().toISOString());"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Basic response validation",
					"pm.test('Response time is less than 5000ms', function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(5000);",
					"});",
					"",
					"pm.test('Response has Content-Type header', function () {",
					"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
					"});",
					"",
					"// Validate JSON response",
					"pm.test('Response is valid JSON', function () {",
					"    pm.response.to.be.json;",
					"});",
					"",
					"// Log response for debugging",
					"console.log('Response Status:', pm.response.status);",
					"console.log('Response Time:', pm.response.responseTime + 'ms');",
					"console.log('Response Body:', pm.response.text());"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string",
			"description": "Base URL for the Weather Integration API"
		},
		{
			"key": "api_version",
			"value": "1.0.0",
			"type": "string",
			"description": "API version"
		}
	]
}
